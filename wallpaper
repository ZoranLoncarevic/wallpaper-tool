#!/bin/bash
# Copyright (C) 2018 Zoran Loncarevic

arg0=${0##*/}
DEFAULT_WALLPAPER="${DEFAULT_WALLPAPER:-/usr/share/backgrounds/Green_by_Alan_Mattila.jpg}"

declare -a the_recipe=()

usage() {
	cat >&2 << EOF_USAGE
usage: wallpaper command ...

Commands:
  set         -- set new wallpaper
  dim         -- dim...
  blur        -- blur...
  tint        -- tint current wallpaper
  next        -- change to next wallpaper
  prev        -- change to preious wallpaper
  browse      -- browse wallpapers
  getfilename -- print current wallpaper filename
EOF_USAGE
}

report_error() {
	echo "$arg0: $2" >&2
	exit $1
}

get_current_wallpaper_filename()
{
	echo "/path/to/current/wallpaper"
}

extract_num() {
	if [[ $1 =~ ^[0-9]+$ ]]; then
		echo ":$1"
		return 0
	else
		echo ""
		return 1
	fi
}

get_recipe() {
	while [[ $# -gt 0 ]]; do
		filter=$1
		case $filter in

			dim)	;&
			blur)	;&
			tint)
				argument=$(extract_num $2) && shift
				the_recipe+=("$filter$argument")
				shift
				;;
			*)
				report_error 2 "Invalid operation $filter"
				;;
		esac
	done
}

get_proposed_file() {
	local proposed_file=$1

	if [[ "${proposed_file^^}" == "CLIP" ]]; then
		proposed_file=$(xclip -o)
	fi
	if [[ "$proposed_file" == "default" ]]; then
		proposed_file="$DEFAULT_WALLPAPER"
	fi

	if [[ -e "$proposed_file" ]]; then
		echo $(realpath -s "$proposed_file")
	else
		report_error 1 "Image $proposed_file does not exists."
	fi
}

set_command()
{
	local wallpaper_file 

	wallpaper_file=$(get_proposed_file "$1") || exit $?
	shift
	get_recipe "$@"
	echo "Parsed filter: ${the_recipe[@]}"
	echo "This should set wallpaper to $wallpaper_file"
}

if [[ $1 = -x ]]; then
	shift
	set -x
fi

case "$1" in

	set)
		shift
		set_command "$@"
		;;
	dim)	;&
	blur)	;&
	tint)
		set_command $(get_current_wallpaper_filename) "$@"
		;;

	getfilename)
		echo $(get_current_wallpaper_filename)
		;;
	browse)
		echo "Browse wallpapers."
		;;
	next)
		echo "Next wallpaper."
		;;
	prev)
		echo "Previous wallpaper."
		;;
	*)
		echo "Invalid command." >&2
		usage
		;;
esac
